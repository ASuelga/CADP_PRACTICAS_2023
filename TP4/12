
program eje12;
const
    dimf=53;
    tipos=1..4;
type
    galaxia=record
        nombre:string;
        tipo:tipos;
        masa:real;
        distancia:real;
    end;

    vector[1 .. dimf ] of integer;
    vector_contador[1 .. 4] of integer;

procedure leer_galaxias(var ga:_galaxia);
begin
    writeln('ingresa nombre');
    readln(ga.nombre);
    writeln('ingresa tipo');
    readln(ga.tipo);
    writeln('ingresa masa');
    readln(ga.masa);
    writeln('ingresa distancia');
    readln(ga.distancia);
end;

procedure inicializar_vector(var ve:vector_contador);
var
    i:integer;
begin  
    for i:= 1 to 4 do begin
        ve[i]:=0;
    end
end;

procedure leer_todo(var v:vector);
var
    i:integer;ga:galaxia;
begin
    for i:=1 to dimf do begin
        leer_galaxias(ga);
        v[i]:=ga;
    end;
end;

procedure maximos(ga:galaxia; var max, max_1, max_2:integer; var nmax1, nmax2:string);
var
    i:integer; 
begin
    max_1:=0;
    max_2:=0;
    for i:=1 to dimf do begin
        if (ga[i].masa> max_1) then begin
            max_2:= max_1;
            nmax2:=nmax1;
            max_1:ga[i].masa;
            nmax1:=ga[i].nombre;
        end
        else
        begin
            if(ga[i].masa> max_2) then begin
                max_2:= ga[i].masa;
                nmax2:=ga[i].nombre;
            end;
end;

procedure minimos(ga:galaxia; var min_1, min_2:integer; var nmin1, nmin2:string);
var
    i:integer;
begin
    min_1:=9999;
    min_2:=9999;
    for i:=1 to dimf do begin
        if (ga[i].masa> min_1) then begin
            min_2:= min_1;
            nmin2:=nmin1;
            min_1:ga[i].masa;
            nmin1:=ga[i].nombre;
        end
        else
        begin
            if(ga[i].masa> min_2) then begin
                min_2:= ga[i].masa;
                nmin2:=ga[i].nombre;
            end;
end;

program no_irregulares(ga:galaxia; var cant_no_irregulares:integer);
var
    i:integer;
begin
    cant_no_irregulares:=0;
    for i:=1 to dimf do begin
        if (ga[i].tipo<>4) and(ga[i].distancia) then begin
            cant_no_irregulares:=cant_no_irregulares+1;
        end;
    end;
end;     

program cant_galaxias(ga:galaxia; var ve:vector_contador);
var
    i:integer;
begin
    if 1 to dimf do begin
        case ga[i].tipo of
            1: ve[1]:=v[1]+1;
            2: ve[2]:=v[2]+1;
            3: ve[3]:=v[3]+1;
            4: ve[4]:=v[4]+1;
        end;    
    end
end;

var
    ga:galaxia;
    cant_no_irregulares:integer;
    ve:vector_contador;
    min_1, min_2, max_1, max_2:integer;
    nmin1, nmin2, nmax1, nmax2:string;
    masa_acumulada, masa_acumulada_3:real;
begin
    masa_acumulada_3:=0;
    masa_acumulada:=0;
    leer_galaxias(ga);
    inicializar_vector(ve);
    leer_todo(ga);
    for i:= 1 to 4 do begin
        if(ve[i]>0) then begin
            masa_acumulada:=masa_acumulada+ve[i].masa;
            cant_galaxias(ga,ve);
            writeln('El tipo de galaxia ',ve[i].tipo,' tiene ', ve[i],' galaxias');
        end;
    end;
    if (ga.nombre='via lactea')or(ga.nombre='andromeda')or(ga.nombre=triangulo)and(ga.diswstancia<1000) then begin
        masa_acumulada_3:=masa_acumulada_3+ga.masa;
    end;
    no_irregulares(ga,cant_no_irregulares);
    maximos(ga,max_1, max_2, nmax1, nmax2);
    minimos(ga,min_1, min_2, nmin1, nmin2);
    writeln('La masa acumulada de las galaxias tipo 3 es ',masa_acumulada_3);
    writeln('La masa acumulada de todas las galaxias es ',masa_acumulada);
    writeln('el porcentaje de las tres galaxias principales con respecto al total es de ', (masa_acumulada_3*100)/masa_acumulada);
    writeln('La cantidad de galaxias no irregulares a menos de 1000pc es ',cant_no_irregulares);
    writeln('La galaxia con mayor masa es ',nmax1,' con ',max_1);
    writeln('La galaxia con segunda mayor masa es ',nmax2,' con ',max_2);
end.
